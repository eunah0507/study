
자바 식별자와 키워드

식별자(Identifier)
 : 자바에서 식별자는 클래스, 인터페이스, 변수, 메소드,
   배열, 문자열 등을 구분할 수 있는 이름입니다.
   이름은 다른 것과 구별해야 하기 때문에 중복되지 않는 것을
   사용해야 합니다. 식별자는 길이의 제한이 없고
   유니코드 문자를 사용해야하기 때문에 한글도 사용할 수 있습니다.
   대, 소문자를 구분하여 사용하며, 식별자를 만드는 몇 가지 관례가 있습니다.

식별자 작성 규칙
   유니코드 문자를 사용한다.
   공백이 없는 한개의 단어로 구성되어야 합니다.
   문자, 숫자, '_', '$'를 사용할 수 있습니다.
   반드시 문자, '_', '$'로시작하여야 합니다.
   길이제한이 없습니다.
   대, 소문자를 구분합니다.
   키워드를 사용할 수 없습니다.


식별자 예

  User_name     O        User name     X
  user_name     O        user name     X
  _User_namr    O        #User_name    X
  수선화          O        7백합          X
  $korea        O        @seoul        x
  King          O        super         x

: Keyword

 : 키워드는 자바에서 미리 예약해 놓은 단어를 의미합니다.
   그래서 키워드를 Reserved Wod(예약어) 라고 부릅니다.
   특정한 단어를 미리 예약하여 특별한 용도로 사용하기 위함입니다.
   자바의 키워드는 모두 소문자 입니다.

   기본 자료형 : void, boolean, byte, char, short, int, long, float, double
   변수 유형지정 : transient, volatile
   제어문     : if, else, switch, case, for, while, do, break, continue,
               return, default
   클래스     : class, interface, abstract, final, extends, implements,
               this, super, new, instanceof, static
   접근 수정자 : public, protected, private
   예외 처리자 : try catch, finally, throw, throws
   패키지     : import, package
   상수       : null, true, false
   메소드 유형 : native, synchronized
   사용되지 않는 키워드 : const, goto

   변수와 상수

   : 컴퓨터에서 처리하는 값이 변하기 위해서는 그 값을 보관하기
     위한 메모릭 공간이 필요합니다. 변수는 메모리의 특정한 기억공간을
     사용합니다. 그러기 위해서는 메모리의 특정한 위치에 자료를
     기억할 수 있는 공간을 확보하고 그 공간에 이름을 부여한 것이
     변수입니다.

   변수는 이름을 갖습니다.
   변수는 값을 갖습니다.
   변수에 있는 값을 수정할 수 있습니다.
   변수는 메모리에 위치합니다.

   => 변수는 자료를 처리하기 위해서 이름이 부여된 기억 공간입니다.

   형식

   1. 자료형 변수이름
   
       int    kor     => 정수형 변수 kor를 위해 필요한 기억공간을 
                       메모리에 확보하고 그 기억공간을 kor이라고
		       명명합니다.
          kor = 99; => 변수에 값 할당

   2. 자료형 변수명 = 초기값;
    
       int  kor = 77; => 변수를 선언함과 동시에 초기화


  변수 선언 순서

  변수이름을 결정합니다.
      : 변수 이름은 변수 작성 규칙에 맞게 정합니다.
        특히 변수가 처리할 데이타의 성격에 맞는
	의미있는 이름으로 정합니다.

  변수의 자료형을 결정합니다.
      : 처리할 데이타의 성격과 크기에 맞는 자료형을 정합니다.

  변수를 초기화합니다.
      : 대입 연산자(=)를 사용해 선언된 변수에 값을 할당합니다.


  변수의 종류

           -- 문자형 : char
 기본형 -	   -- 정수형 : byte, short, int, long
	   -- 실수형 : float, double
	   -- 논리형 : boolean


           -- 클래스
 참조형 -    -- 인터페이스
           -- 배열
	  

Primitive Type(기본형)

 : 기본형으로 사용되는 자료형을 8가지가 있습니다.

자료형  키워드        내용                        표현범위            크기      초기값
 
문자형  char        2byte 유니코드를 처리          '\u0000~\uffff   2byte   '\u0000'

논리형  boolean     true, flase 처리             true, false     1byte    false

정수형  byte        1byte 정수 처리 -128~127                      1byte    0
                                                           (-2 *7 ~ 2*7 -1)

정수형  short       2byte 정수 처리 -32768~32767                  2byte     0
                                                           (-2*15 ~ 2*15 -1)  

정수형  int         4byte 정수 처리        -2147483648~2147483647  4byte    0    
 
정수형  long        8byte 정수 처리        (2 *63 ~ 2* 63 -1)     8byte     0

실수형  float       4byte 실수 처리(부동 소숫점 처리)                 4byte     0.0

실수형  double      8byte 실수 처리(부동 소숫점 처리)                 8byte     0.0