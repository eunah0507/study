
. Inheritance(상속)

 : 상속이란 기존의 클래스를 재사용하여 새로운 클래스를 작성하는 것이다.
   상속을 통해서 클래스를 작성하면 보다 적은 양의 코드로 새로운 클래스를 
   작성할 수 있고 코드를 공통적으로 관리 철수 할 수 있기 때문에 코드의 추가 및
   변경이 매우 용이하다.
   이러한 특징은 코드의 재사용성을 높이고 코드의 중복을 제거하여 프로그램의 생산성과 유지보수를 용이하게 한다.
   
   상속 관계에서 가존의 클래스를 Super Class (슈퍼클래스) 또는
   Parent Class(부모클래스) 라 하고 이 클래스르 확장하여 새롭게 정의한
   클래스를 Sub Class(서브 클레스) 또는 Child Class(자식 클래스) 라고 합니다.
   결국 상속해 주는 클래스가 슈퍼 클래스, 상속 받는 클래스가 서브 클래스가 됩니다.
   이와 같이 서브 클래스가 슈퍼클래스의 상속 및 기능들을 물려 받는 것을 상속이라 합니다.
   
   상속을 사용하면 클래스를 선언할 때 마다 모든 멤버를 다시 만들 필요가 없습니다.
   새롭게 추가되는 자신의 특성만 기술하고, 공통된 부분은 슈퍼 클래스의 멤버를 상속받아 해결합니다.
   결국 클래스 계층 위로 올라 갈수록 추상화된 내용을 기술하고, 아레로 내려올수록 보다 구체적인
   내용을 기술하게 됩니다.
   이처럼 클래스가 계층적으로 구성되면 클래스들을 보다 효율적으로 사용할 수 있습니다.
   
   자바는 상속을 이용해 클래스의 계층 구조를 구상합니다.
   자바는 계층 구조의 라이브러리를 갖고 있으며 JDK는 Object클래스를 
   최상위 클래서로 정헤 놓고 많은 클래스가 상속 받는 구조로 되어 있습니다.
   //단일문제를 해결하려고 나온게 인터페이스,,?
   
   
    상속의 사용 방법 
      
      : 자바에서 킁애스를 상속 받기 위해 extends 키워드를 사용합니다.
      [public/abstract/final] class 서브클래스  extends 슈퍼클래서
      {
        멤버1;
        멤버2;
        ...;
        }
       
       
    메소드의 Overriding(오버라이딩)
    
    : 자바언어는 polymorphism(다형성)을 이용하기 위하여
      Overloading과 overriding을 사용합니다.
      오버로딩은 같은 클래스 안에서 이름이 같은 메소드를 2개 이상
      정의하는 것입니다. 반면에 오버라이딩은 상속관계에 있는
      슈퍼 클래스와 서브 클래스에서 같은 이름의 메소드를 정의하는 것 입니다.'
      슈퍼클래스에 있는 메소드의 시그니처와 서브클래스에서 재정의한
      메소드의 시그니처가 동일해야 합니다.
      
     오버로딩                               오버라이딩
      
     class AA                             class BB
      public void display() {}            public void display(int a) {}
      public void display(char b) {}      class CC extends BB {
      												public void display(){}
  																}
  																
    오버라이딩은 기존의 클래스를 이용하여 새로운 클래스를 만들 때,
    기존 클래스의 메소드와 의미적으로는 같지만 약간의 변화가 
    필요한 메소드를 만들 때 사용합니다.
    
    super
    
     : this는 객체 자신을 뜻하는 반면에 super는 상속 관계에서
       부모 클래스의 객체를 가르키는 키워드입니다.
       
        1. 상속받은 슈퍼클래스에 있는 멤버 변수나 메소드에 접근할 때
           사용합니다.
           super.멤버변수 , super.멤버메소드(매개변수)
           
        2. 슈퍼클래스의 생성자를 호출할 때 사용합니다. 반드시 첫번째 줄에 기재되어야 합니다.
           super();
      
      
  final (변수. 메소드. 클래스에서 쓰인다 / 관례적으로 대문자를 쓴다 / 초기화를 단 한 번 할 수 있다.)
  (스트링과 시스템이 파이널클래스이다) (변수에 붙으면 상수화시킨다.)
  종단 클래스
  
  : 클래스를 선언할 때 final 키워드를 사용하는 클래스를 종단 클래스라고 합니다.
    종단 클래스는 더 이상 상속할 수 없는 클래스입니다.
    
    형식
    
    final class 클래스이름 {
    .....;
    }    
        