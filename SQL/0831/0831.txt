. RENAME : 테이블 명을 변경한다

  형식

  rename 테이블명 to 새 테이블명

  1. 먼저 테이블을 생성한다.
  create table emp_07
  as
  select ename, sal, mgr from emp;

  2. 테이블 이름을 변경해준다.
  rename emp_07 to mbc_07;


  . DML(Data Manipulation Language) : 테이블의 내용을 추가(insert), 수정(update), 삭제(delete)하는 DML
  				    : 테이블 내의 데이터를 조작하는 언어. 자동으로 commit 되지 않는다.

  . INSERT

    : 테이블에 새로운 로우를 추가할 때 사용하는 SQL문입니다.
      테이블에 새로운 데이터를 입력하기 위해 사용하는 데이터 조작어이다.
      테이블의 모든 컬럼에 입력하는 컬럼 목록을 기술하지 않아도 된다.
      컬럼 목록이 생략되면 VALUES절의 다음 값들이 테이블의 기본 컬럼 순서대로 입력된다.

	  형식

	  1. INSERT INTO 테이블명(컬럼명..)  VALUES(컬럼값..)

	  2. INSERT INTO 테이블명 VALUES[값];
	  (테이블안에 있는 컬럼들과 똑같은 수가 들어올 때)

	  // 컬럼의 값과 값의 값의 수가 다르면 값의 수가 충분하지 않다고 오류가 뜬다.

	  create table dept_02
	  as
	  select * from dept where 1 = 0;
	
	  insert into dept_02(deptno, dname, loc)vaules(10, '영업부', '서울);

Q. 비어있는 emp_08 테이블을 만들고, 서브쿼리를 사용하여 10번 부서의 사원들을 갖는 테이블을 만드시오

   1.
   create table emp_08
   as
   select * from emp where deptno = 10;

   2.
   create table emp_09
   as
   select * from emp where 1 = 0

   insert into emp_09
   select * from emp 
   where deptno = 10;

   insert into emp_09(ename, sal, hiredate)
   values('seoul',2300,'22/08/31');

   insert into emp_09(ename, sal, hiredate)
   values('busan',2500,sysdate); //오늘 날짜 넣는 방법

   . 다중 테이블에 다중행 입력

     create table emp_hir
     as
     select empno, ename, hiredate from emp where 1 = 0;

     create table emp_mgr
     as
     select empno, ename, mgr from emp where 1 = 0;

     INSERT ALL
     INTO emp_hir VALUES(empno, ename, hiredate)
     INTO emp_mgr VALUES(empno, ename, mgr)
     SELECT empno,ename,hiredate,mgr
     FROM emp
     WHERE deptno = 20;


. 암묵적 NULL 값의 삽입

  insert into emp_mgr(empno, mgr)
  values(29, 6745);

. 명시적 NULL 값의 삽입 (NULL/null/'' 삽입)

  insert into emp_mgr(empno, ename, mgr)
  values(4444, NULL, 7544);

  insert into emp_mgr(empno, ename, mgr)
  values(1111, null, 5453);

  insert into emp_mgr(empno, ename, mgr)
  values(1234, '', 5678);


. UPDATE

  : 테이블에 저장된 데이터를 수정하기 위해서 사용하는 명령문
    기존의 행을 수정하기 위해 사용
    WHERE 절을 사용하지 않을경우 테이블에 있는 모든 행이 수정된다.

    형식

    UPDATE 테이블명
    SET	   컬럼명1=값, 컬럼명2=값, ...
    WHERE  조건

    UPDATE 테이블명 SET 컬럼명 WHERE 조건

    update emp_hir set empno = 9999
    where ename = 'SMITH'; // smith 란 사람의 empno만 바뀜

    update emp_hir set empno = 9999 
    // where 조건절을 쓰지 않았기 때문에 모든 사람의 empno가 바뀜

    Q. emp_hir 테이블의 'scott'의 empno = 5555로 변경

    update emp_hir
    set empno = 5555
    where ename = 'SCOTT';

    Q. emp_hir 테이블 사원들의 입사일을 어제 날짜로 바꾸시오

    update emp_hir
    set hiredate = sysdate-1;

 
    Q. emp_02 테이블의 사원들 중 이름에 'T'가 들어있는 
       사원들의 월급을 1300으로 바꾸세요

       update emp_02
       set sal = 1300
       where ename LIKE '%T%';

    Q. emp_02 테이블의 'MANAGER'의 입사일을 어제로 바꾸세요

       update emp_02
       set hiredate = sysdate-1
       where job = 'MANAGER';

    Q. emp_02 테이블의 사원중에 급여가 3000이상인 사원들의 
       급여가 50% 인상하고 입사일을 '22/01/01'로 바꾸시오

       update emp_02
       set sal = sal * 1.5, hiredate = '22/01/01'
       where sal >= 3000;

    Q. '01'월에 입사한 사원의 월급을 10000원 인상하시오

       update emp_02
       set sal = sal + 10000
       where hiredate = SUBSTR(hiredate,4,2)='01';
       // to_char로 변경해서 만들어보기

    Q. 'DALLAS'에 근무하는 사원들의 월급을 5000원 인상하시오
       
       update emp_02
       set sal = sal + 5000
       where deptno = (select deptno from dept where loc = 'DALLAS');

    Q. emp_02 테이블의 모든 사원의 급여와 입사일을 'KING' 사원의 급여와 입사일로 바꾸시오.(2가지)

       update emp_02
       set sal = (select sal from emp_02 where ename = 'KING'),
       hiredate = (select hiredate from emp_02 where ename = 'KING');

       update emp_02
       set (sal,hiredate) = (select sal, hiredate from emp_02 where ename = 'KING');
       



       



